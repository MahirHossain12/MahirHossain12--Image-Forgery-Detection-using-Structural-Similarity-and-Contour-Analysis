# -*- coding: utf-8 -*-
"""NID card fraud detection(p1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fAH3cSK82FijUneEzTHJSgF7ffU37pM3
"""

from skimage.metrics import structural_similarity
import cv2
import numpy as np
import imutils
from PIL import Image
import requests

!mkdir nid_card_temp
!mkdir nid_card_temp/image

original = Image.open(requests.get('https://www.thestatesman.com/wp-content/uploads/2019/07/pan-card.jpg', stream=True).raw)
faked = Image.open(requests.get('https://assets1.cleartax-cdn.com/s/img/20170526124335/Pan4.png', stream=True).raw)

print('original image formating: ', original.format)
print('original image size: ', original.size)
print('original image mode: ', original.mode)

print('faked image formating ', faked.format)
print('faked image size: ', faked.size)
print('faked image mode: ', faked.mode)

original = original.resize((250,160))
print(original.size)
original.save('nid_card_temp/image/original.png')
faked = faked.resize((250,160))
print(faked.size)
faked.save('nid_card_temp/image/faked.png')

original

faked

original = cv2.imread('nid_card_temp/image/original.png')
faked = cv2.imread('nid_card_temp/image/faked.png')

original_gray = cv2.cvtColor(original, cv2.COLOR_BGR2GRAY)
faked_gray = cv2.cvtColor(faked, cv2.COLOR_BGR2GRAY)

#structural similarity test
(score, diff) = structural_similarity(original_gray, faked_gray, full=True)
diff = (diff * 255).astype('uint8')
print('simularity: ', score)

#calculating contours and thresh
thresholded = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]
contours = cv2.findContours(thresholded.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(contours)

#bounding box
for c in contours:
    (x, y, w, h) = cv2.boundingRect(c)
    cv2.rectangle(original, (x, y), (x + w, y + h), (0, 0, 255), 2)
    cv2.rectangle(faked, (x, y), (x + w, y + h), (0, 0, 255), 2)

#display with contour
print('original image')
Image.fromarray(original)

print('faked image')
Image.fromarray(faked)

#display with black
print('Different image')
Image.fromarray(diff)

#display with white
print('fthresh image')
Image.fromarray(thresholded)

